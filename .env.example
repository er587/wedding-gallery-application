# Wedding Gallery Environment Configuration Template
# Copy this to .env and update with your actual values for production deployment

# ============================================================================
# DJANGO CORE SETTINGS
# ============================================================================

# SECURITY WARNING: Generate a unique secret key for production!
# Generate one with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-secret-key-here-change-this-in-production

# SECURITY WARNING: Don't run with debug turned on in production!
DEBUG=False

# Comma-separated list of allowed hostnames
# Include your domain and www subdomain
ALLOWED_HOSTS=your-domain.com,www.your-domain.com,localhost,127.0.0.1

# ============================================================================
# DATABASE CONFIGURATION  
# ============================================================================

# PostgreSQL connection string for production
# Format: postgres://username:password@localhost:5432/database_name
DATABASE_URL=postgresql://wedding_user:your_password@localhost:5432/wedding_gallery

# ============================================================================
# CORS & CSRF SECURITY
# ============================================================================

# Frontend URLs that can access the API (comma-separated)
CORS_ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com

# CSRF trusted origins (comma-separated, with protocol)
CSRF_TRUSTED_ORIGINS=https://your-domain.com,https://www.your-domain.com

# CORS credentials
CORS_ALLOW_CREDENTIALS=True

# SECURITY: Set to False in production!
CORS_ALLOW_ALL_ORIGINS=False

# ============================================================================
# MEDIA AND STATIC FILES
# ============================================================================

# For production on VPS
MEDIA_ROOT=/var/www/wedding-gallery/media
STATIC_ROOT=/var/www/wedding-gallery/static

# ============================================================================
# WEDDING CUSTOMIZATION
# ============================================================================

# Customize these for your wedding
WEDDING_COUPLE_NAME=Your Names
WEDDING_DATE=Your Wedding Date
WEDDING_VENUE=Your Venue
WEDDING_HASHTAG=#YourHashtag
WEDDING_TITLE=Our Wedding Gallery
WEDDING_DESCRIPTION=Share your beautiful memories from our special day!

# ============================================================================
# FILE UPLOAD SETTINGS
# ============================================================================

# Maximum file size for uploads (in bytes)
# 10MB = 10485760 bytes, 25MB = 26214400 bytes
FILE_UPLOAD_MAX_MEMORY_SIZE=26214400
DATA_UPLOAD_MAX_MEMORY_SIZE=26214400

# Allowed file extensions (comma-separated)
ALLOWED_IMAGE_EXTENSIONS=jpg,jpeg,png,webp,gif

# ============================================================================
# EMAIL CONFIGURATION (Optional)
# ============================================================================

# For production email notifications (SMTP)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
DEFAULT_FROM_EMAIL=noreply@your-domain.com
SERVER_EMAIL=admin@your-domain.com

# For development/testing (console output)
# EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# ============================================================================
# PERFORMANCE SETTINGS
# ============================================================================

# API pagination
DEFAULT_PAGE_SIZE=12
MAX_PAGE_SIZE=100

# Image optimization
THUMBNAIL_SIZE=300
THUMBNAIL_QUALITY=85
IMAGE_COMPRESSION_QUALITY=90

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file location
LOG_FILE=/var/log/wedding-gallery/app.log

# ============================================================================
# BACKUP CONFIGURATION (Production)
# ============================================================================

# Database backup schedule (handled by cron or systemd timer)
BACKUP_SCHEDULE=daily
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=/backups/wedding-gallery/

# ============================================================================
# OPTIONAL INTEGRATIONS
# ============================================================================

# Sentry error tracking (optional but recommended for production)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project

# AWS S3 for media storage (optional alternative to local storage)
# USE_S3_STORAGE=True
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_STORAGE_BUCKET_NAME=your-wedding-photos
# AWS_S3_REGION_NAME=us-east-1

# ============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ============================================================================

# Before going live, ensure you have:
# ✓ Changed SECRET_KEY to a unique, strong value
# ✓ Set DEBUG=False
# ✓ Updated ALLOWED_HOSTS with your actual domain
# ✓ Configured PostgreSQL database with proper credentials
# ✓ Set up HTTPS with SSL certificate (Let's Encrypt)
# ✓ Created media and static directories with proper permissions
# ✓ Run collectstatic to gather static files
# ✓ Run migrations to set up database schema
# ✓ Created superuser account for admin access
# ✓ Configured nginx as reverse proxy
# ✓ Set up gunicorn systemd service
# ✓ Configured firewall (UFW) to allow HTTP/HTTPS
# ✓ Set up automated backups for database and media files
# ✓ Tested all functionality in production environment
