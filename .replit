run = ["python", "manage.py", "runserver", "0.0.0.0:3000"]
entrypoint = "manage.py"
modules = ["python-3.10", "nodejs-24", "postgresql-16", "python3"]

hidden = [".pythonlibs"]

[nix]
channel = "stable-24_05"
packages = ["freetype", "lcms2", "libGL", "libGLU", "libimagequant", "libjpeg", "libtiff", "libwebp", "libxcrypt", "openjpeg", "tcl", "tk", "zlib"]

[unitTest]
language = "python3"

[deployment]
run = ["sh", "-c", ". venv/bin/activate && python manage.py migrate && gunicorn --bind 0.0.0.0:${PORT:-8000} --workers 3 --timeout 120 django_project.wsgi:application"]
deploymentTarget = "vm"
build = ["sh", "-c", "python3 -m venv venv && . venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt && cd frontend && npm install && npm run build && cd .. && python manage.py collectstatic --noinput"]

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 8000
externalPort = 8000

[[ports]]
localPort = 24678
externalPort = 80

[agent]
expertMode = true
integrations = ["javascript_object_storage:1.0.0"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Django Backend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "React Frontend"

[[workflows.workflow]]
name = "Django Backend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python manage.py runserver 0.0.0.0:8000"
waitForPort = 8000

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "React Frontend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm run dev"
waitForPort = 5000

[workflows.workflow.metadata]
outputType = "webview"

[objectStorage]
defaultBucketID = "replit-objstore-5c5b7745-456c-4b58-8f54-b3fd89ab78c2"
